// <auto-generated />
using EFCoreDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreDB.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            Alias = "Iron Man",
                            Gender = "Male",
                            MovieId = 1,
                            Name = "Iron Man (Tony Stark)",
                            PictureUrl = "https://www.imdb.com/HeDiedInVain"
                        },
                        new
                        {
                            CharacterId = 2,
                            Alias = "The Fatherless One",
                            Gender = "Male",
                            MovieId = 2,
                            Name = "Luke Skywalker",
                            PictureUrl = "https://www.imdb.com/title/IamNotYourDaddy"
                        },
                        new
                        {
                            CharacterId = 3,
                            Alias = "The Chosen One",
                            Gender = "Male",
                            MovieId = 3,
                            Name = "Harry Potter",
                            PictureUrl = "https://www.imdb.com/title/itsWingardiumLeviOsaNotLeviOsa"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharactersCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesMovieId")
                        .HasColumnType("int");

                    b.HasKey("CharactersCharacterId", "MoviesMovieId");

                    b.HasIndex("MoviesMovieId");

                    b.ToTable("MovieCharacters", (string)null);
                });

            modelBuilder.Entity("Franchise", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FranchiseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FranchiseId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            Description = "A series of superhero films produced by Marvel Studios",
                            Name = "Marvel Cinematic Universe"
                        },
                        new
                        {
                            FranchiseId = 2,
                            Description = "An epic space-opera media franchise",
                            Name = "Star Wars"
                        },
                        new
                        {
                            FranchiseId = 3,
                            Description = "A series of fantasy novels written by J. K. Rowling",
                            Name = "Harry Potter"
                        });
                });

            modelBuilder.Entity("Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReleaseYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrailerUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MovieId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Director = "Anthony Russo, Joe Russo",
                            FranchiseId = 1,
                            Genre = "Action, Adventure, Sci-Fi",
                            PictureUrl = "https://www.imdb.com/TooDamnLongMovie",
                            ReleaseYear = "2019",
                            Title = "Avengers: Endgame",
                            TrailerUrl = "https://www.youtube.com/watch?v=TcMBFSGVi1c"
                        },
                        new
                        {
                            MovieId = 2,
                            Director = "George Lucas",
                            FranchiseId = 2,
                            Genre = "Action, Adventure, Fantasy",
                            PictureUrl = "https://www.imdb.com/WaveTheSaberMyFriend",
                            ReleaseYear = "1977",
                            Title = "Star Wars: Episode IV - A New Hope",
                            TrailerUrl = "https://www.youtube.com/watch?v=1g3_CFmnU7k"
                        },
                        new
                        {
                            MovieId = 3,
                            Director = "Chris Columbus",
                            FranchiseId = 3,
                            Genre = "Adventure, Family, Fantasy",
                            PictureUrl = "https://www.imdb.com/HarrysParrentDidNotLikeHim",
                            ReleaseYear = "2001",
                            Title = "Harry Potter and the Philosopher's Stone",
                            TrailerUrl = "https://www.youtube.com/watch?v=VyHV0BRtdxo"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movie", b =>
                {
                    b.HasOne("Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
